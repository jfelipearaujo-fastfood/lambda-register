name: destroy

on:
  workflow_dispatch:

jobs:
  test:
    name: Tests (Unit)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: Test
        run: go test -race -count=1 ./internal/...

  build:
    name: Build and Package
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ vars.GO_VERSION }}

      - name: Build
        run: env GOOS=linux GOARCH=arm64 go build -o bootstrap cmd/main.go

      - name: Package
        run: zip lambda.zip bootstrap

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: lambda
          path: lambda.zip
          retention-days: 1

  destroy:
    name: Destroy Infrastructure
    needs:
      - build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download lambda.zip
        uses: actions/download-artifact@v3
        with:
          name: lambda
          path: ./terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.4"

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ secrets.AWS_BUCKET_TF_STATE }}"

      - name: Terraform Plan
        id: plan
        env:
          TF_VAR_bucket_name: ${{ secrets.AWS_BUCKET_TF_STATE }}
        run: terraform plan -input=false
        continue-on-error: true

      - name: Terraform Destroy
        if: github.ref == 'refs/heads/main'
        env:
          TF_VAR_bucket_name: ${{ secrets.AWS_BUCKET_TF_STATE }}
        run: terraform destroy -input=false -auto-approve
